# Stuff to contour storm objects with

id = "pressurecoverage";
expiresSeconds = 1;
constructor_name = "wfs_coverage_query_handler_factory";
template = "coverage_countours.c2t";
returnTypeNames = [ "omso:GridSeriesObservation" ];

title: {
   eng = "Weather parameter coverage as GML-contours";
   fin = "Sääparametrin peittoalue esitettynä GML-kontuureina";
};

abstract: {
   eng = "Weather parameter forecast for an area returned in GML-contours. Contours are polygons. Area can be specified as bbox parameter. Copied from fmi::forecast::copernicus::marine::arctic::surface::coverage::icethickness";
   fin = "Sääparametrin ennuste alueelle palautettuna GML-konttuureina. Haluttu alue voidaan määrittää bounding boxina (bbox). Tuloksena saatavat kontuurit ovat polygoneja."
};

parameters: (
{
    name = "starttime";
    title = {
        eng = "Begin of the time interval";
        fin = "Alkuaika";
    };
    abstract = {
        eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z).";
        fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z).";
    };
    xmlType = "dateTime";
    type = "time";
},
{
    name = "origintime";
    title = {
       eng = "Analysis time";
       fin = "Analyysiaika";
    };
    abstract = {
       eng = "Analysis time specifies the time of analysis in ISO-format (for example 2012-02-27T00:00:00Z).";
       fin = "Analyysiaika ISO-muodossa (esim. 2012-02-27T00:00:00Z).";
    };
    xmlType = "dateTime";
    type = "time";
},
{
    name = "endtime";
    title = {
        eng = "End of time interval";
        fin = "Loppuaika";
    };
    abstract = { 
        eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z).";
        fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z).";
    };
    xmlType = "dateTime";
    type = "time";
},
{
    name = "timesteps";
    title = {
       eng = "Number of timesteps";
       fin= "Aika-askelten lukumäärä";
    };
    abstract = {
        eng = "Number of timesteps in result set.";
        fin = "Tulosjoukossa palautettavien aika-askelten lukumäärä.";
    };
    xmlType = "int";
    type = "uint";
},
{
    name = "crs";
    title = {
        eng = "Coordinate projection to use in results";
        fin = "Projektio";
    };
    abstract = {
        eng = "Coordinate projection to use in results. For example EPSG::3067";
        fin = "Projektiotieto. Esimerkiksi EPSG::3067";
    };
    xmlType = "xsi:string";
    type = "string";
},
{
    name = "bbox";
    title = {
        eng = "Bounding box of area for which to return data.";
        fin = "Aluerajaus";
    };
    abstract = {
        eng = "Bounding box of area for which to return data (lon,lat,lon,lat). For example 21,61,22,62";
        fin = "Aluerajaus (lon,lat,lon,lat). Esimerkiksi 21,61,22,62";
    };
    xmlType = "xsi:string";
    type = "bbox";
    minOccurs = 0;
    maxOccurs = 1;
},
{
    name = "timezone";
    title = {
        eng = "Time zone";
        fin = "Aikavyöhyke";
    };
    abstract = {
        eng = "Time zone of the time instant of the data point in the form Area/Location (for example America/Costa_Rica). Default value is UTC.";
        fin = "Datapisteen aika-arvon aikavyöhyke muodossa Alue/Paikka (esim. Europe/Stockholm). Oletusvyöhyke on UTC.";
    };
    xmlType  = "xsi:string";
    type     = "string";
},
{
    name = "producer";
    title = {
        eng: "Producer"; 
        fin: "Tuottaja";
    };
    abstract = {
        eng: "Model or process which provides the data."; 
        fin: "Datan tuottava malli tai prosessi.";
    };
    xmlType = "xsi:string";
    type = "string";
    minOccurs = 0;
    maxOccurs = 1;
},
{
    name = "limits";
    title = { 
        eng = "Upper and lower limits for contour";
        fin = "Kontuurien ylä- ja alarajat";
    };
    abstract = {
        eng = "Upper and lower limits for contour";
        fin = "Kontuurien ylä- ja alarajat";
    };
    xmlType = "gml:doubleList";
    type = "double[0..999]";
    minOccurs = 0;
    maxOccurs = 1;
}
);

named_params = (
{
    name = "defaultContourParamLimits";
    # For stormy days search for pressure of 1000 hPa or lower
    def = [0.0,1000.0];
}
);

handler_params:{
    hours = [];
    times = [];
    timeSteps = "${timesteps}";
    timeStep = "${}";
    beginTime = "${starttime}";
    endTime = "${endtime}";  
    # Default to ERA5-data
    producer = "${producer:ERA5}";
    maxDistance = 5000.0;
    places = [];
    latlons = [];
    geoids = [];
    keyword_overwritable = false;
    keyword = "";
    # The area for requesting data is roughly for whole Finland
    boundingBox = "${bbox:21,61,22,62}";
    originTime = "${origintime}";
    startStep="${}";
    crs = "${crs:EPSG::4326}";
    timeZone = "${timezone:UTC}";
    limits = ["${limits > defaultContourParamLimits}"];
};

contour_param: {
    name = "Pressure";
    unit = "hPa";   
    id = 1;
    # limits-parameter is defined in handler_params and 
    # its default value in named_params
};
