disabled = true;
demo = false;

id = "fmi::forecast::glameps::probability::multipointcoverage";
expiresSeconds = 18000;

constructor_name = "wfs_forecast_handler_factory";

title: {
    eng = "GLAMEPS Probabilities Point encoded in multi point coverage format";
    fin = "GLAMEPS todennäköisyydet piste-ennusteena 'multipointcoverage'-muodossa";
};
abstract: { 
	  eng = "This stored query provides GLAMEPS probabilities as point data encoded in multi point coverage format."; 
	  fin = "Tämä tallennettu kysely tarjoaa GLAMEPS todennäköisyyksien piste-ennusteen 'multipointcoverage'-muodossa."; };

template = "weather_forecast_grid.c2t";

returnTypeNames = ["omso:GridSeriesObservation"];

parameters: (
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},   
{
	name = "parameters";
	title = { eng = "Parameters to return"; fin = "Meteorologiset parametrit"; };
	abstract = { eng = "Comma separated list of meteorological parameters to return."; fin = "Meteorologiset parametrit pilkulla erotettuna.";};
	xmlType = "NameList";
	type = "string[0..99]";
	minOccurs = 0;
	maxOccurs = 999;
},
{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; fin = "Projektio"; };
        abstract = { eng = "Coordinate projection to use in results. For example EPSG::4258"; fin = "Projektiotieto. Esimerkiksi EPSG::4258";};
        xmlType = "xsi:string";
        type = "string";
},
{
	name = "latlon";
	title = { eng = "Location coordinates to return data."; fin = "Paikan koordinaatit";  };
	abstract = { eng = "Location coordinates to return data  (lat,lon). For example 61.2,21"; fin = "Paikan koordinaatit (lat,lon). Esimerkiksi 61.2,21"; };
	xmlType = "gml:pos";
	type = "double[2]";
	minOccurs = 0;
	maxOccurs = 99;
},
{
        name = "geoid";
        title = { eng = "Geoid of the location for which to return data."; fin = "Haettavan paikan geoid."; };
        abstract = { eng = "Geoid of the location for which to return data. (ID from geonames.org)"; fin = "Haettavan paikan geoid (geonames.org:sta)"; };
        xmlType = "int";
        type = "int";
	minOccurs = 0;
	maxOccurs = 99;
}
);

handler_params:
{
        hours = [];
        times = [];
        timeSteps = "${}";
        beginTime = "${starttime: now rounded up 180 min}";
        endTime = "${endtime > empty}";
        timeStep = "${timestep: 180}";
        model = ["glameps_probability"];
        level = [0];
        levelType = "";
        levelHeights = [];
        param = ["${parameters > defaultMeteoParam}"];
        maxDistance = 50000.0;
        places = [];
        latlons = ["${latlon}"];
        geoids = ["${geoid}"];
        keyword_overwritable = false;
	keyword = "";
        findNearestValid = 0;
        locale = "fi_FI.utf8";
        missingText = "NaN";
        originTime = "${}";
        startStep="${}";
        crs = "${crs:EPSG::4258}";
        timeZone = "UTC";
};

named_params = (
    {
        name = "defaultMeteoParam";
        def = ["ProbabilityOfColdLimit1", "ProbabilityOfColdLimit2", "ProbabilityOfColdLimit3", "ProbabilityOfColdLimit4", "ProbabilityOfHeatLimit1", "ProbabilityOfHeatLimit2", "ProbabilityOfHeatLimit3", "FrostProbability", "ProbabilityOfGustLimit1", "ProbabilityOfGustLimit2", "ProbabilityOfGustLimit3", "ProbabilityOfGustLimit4", "ProbabilityOfGustLimit5", "ProbabilityOfWindLimit1", "ProbabilityOfWindLimit2", "ProbabilityOfWindLimit3", "ProbabilityOfWindLimit4", "ProbabilityOfWindLimit5", "ProbabilityOfWindLimit6", "ProbabilityOfPr6Limit1", "ProbabilityOfPr6Limit2", "ProbabilityOfPr6Limit3", "ProbabilityOfPr6Limit4", "ProbabilityOfPr6Limit5", "ProbabilityOfSn6Limit1", "ProbabilityOfSn6Limit2", "ProbabilityOfSn6Limit3", "ProbabilityOfSn6Limit4", "ProbabilityOfSn6Limit5", "ProbabilityOfSn6Limit6"];
    },
    {
        name = "empty";
        def  = [];
    }
);

separateGroups = false;
