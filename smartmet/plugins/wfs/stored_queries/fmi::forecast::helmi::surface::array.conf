
disabled = false;

id = "fmi::forecast::helmi::surface::array";

template = "ibplott_ice_array.c2t";

expiresSeconds = 21600;

constructor_name = "wfs_stored_grid_handler_factory";

title:
{
	eng = "Helmi Sea Ice Forecast";
	fin = "Helmi-mallin jääennuste";
};

abstract:
{
	eng = "Helmi ice forecasts in grid XML format.";
	fin = "Samma på finska";
};

parameters:
(
{
	name = "starttime";
	title = {eng = "Begin of the time interval"; fin = "Alkuaika"; };
	abstract = { eng = "Parameter begin specifies the begin of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson alkuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "endtime";
	title = { eng = "End of time interval"; fin = "Loppuaika"; };
	abstract = { eng = "End of time interval in ISO-format (for example 2012-02-27T00:00:00Z)."; fin = "Aikajakson loppuaika ISO-muodossa (esim. 2012-02-27T00:00:00Z)."; };
	xmlType = "dateTime";
	type = "time";
},
{
	name = "timestep";
	title = { eng = "The time step of data in minutes"; fin= "Aika-askel minuutteina";};
	abstract = { eng = "The time step of data in minutes. Notice that timestep is calculated from start of the ongoing hour or day. "; fin= "Aika-askel minuutteina. Huomaa, että aika-askel lasketaan tasaminuuteille edellisestä tasatunnista tai vuorokaudesta.";};
	xmlType = "int";
	type = "uint";
},
{
	name = "parameters";
	title = { eng = "Parameters to return"; fin = "Meteorologiset parametrit"; };
	abstract = { eng = "Comma separated list of meteorological parameters to return."; fin = "Meteorologiset parametrit pilkulla erotettuna.";};
	xmlType = "NameList";
	type = "string[1..99]";
	minOccurs = 0;
	maxOccurs = 999;
},

{
        name = "crs";
        title = { eng = "Coordinate projection to use in results"; fin = "Projektio"; };
        abstract = { eng = "Coordinate projection to use in results. For example EPSG::3067"; fin = "Projektiotieto. Esimerkiksi EPSG::3067";};
        xmlType = "xsi:string";
        type = "string";
},
{
	name = "bbox";
	title = { eng = "Bounding box of area for which to return data."; fin = "Aluerajaus";  };
	abstract = { eng = "Bounding box of area for which to return data (lon,lat,lon,lat). For example 21,61,22,62"; fin = "Aluerajaus (lon,lat,lon,lat). Esimerkiksi 21,61,22,62"; };
	xmlType = "xsi:string";
	type = "bbox";
	minOccurs = 1;
	maxOccurs = 1;
},
{
	name = "scalefactor";
	title = { eng = "Scale factor for the returned data."; fin = "Kokonaislukukerroin palautetulle datalle";  };
	abstract = { eng = "Scale factor for the returned data"; fin = "Kokonaislukukerroin palautetulle datalle"; };
	xmlType = "int";
	type = "uint";
},
{
	name = "precision";
	title = { eng = "Precision for the returned data."; fin = "Tarkkuus palautetulle datalle";  };
	abstract = { eng = "Precision for the returned data"; fin = "Tarkkuus palautetulle datalle"; };
	xmlType = "int";
	type = "uint";
},
{
	name = "datastep";
	title = { eng = "Spatial data interval for output."; fin = "Hilan harvennukseen käytettävä indeksi";  };
	abstract = { eng = "Spatial data interval for output."; fin = "Hilan harvennukseen käytettävä indeksi";  };
	xmlType = "int";
	type = "uint";
},
{
	name = "missingText";
	title = { eng = "Value for NaNs in return data"; fin = "Puuttuvan arvon teksti";  };
	abstract = { eng = "Value for NaNs in return data"; fin = "Puuttuvan arvon teksti"; };
	xmlType = "xsi:string";
	type = "string";
}


);

returnTypeNames = [ "omso:PointTimeSeriesObservation" ];

handler_params:
{
        hours = [];
        times = [];
        timeSteps = "${}";
        beginTime = "${starttime: now}";
        endTime = "${endtime: after 24 hours}";
        timeStep = "${timestep: 60}";
	producer = "helmi";
        levelValue = [];
        levelType = "";
	boundingBox = "${bbox}";
        param = ["${parameters > defaultIceParams}"];
        locale = "fi_FI.utf8";
        missingText = "${missingtext: -9999}";
        originTime = "${}";
        startStep="${}";
	dataCRS = "${crs:EPSG::4326}";
	scaleFactor = "${scalefactor: 1000}";
	precision = "${precision: 0}";
	datastep = "${datastep: 1}";
};

named_params = (
    {
        name = "defaultIceParams";
        def = ["MeanIceThickness","IceConcentration","EastwardIceVelocity","NorthwardIceVelocity","IceDegreeOfRidging","RidgeIceConcentration"];
    }
);

